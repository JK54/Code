(define (square-tree-map tree)
	(map (lambda (sub-tree)
		  	(if (pair? sub-tree)
			  (square-tree-map sub-tree)
			  (square sub-tree)))
	 	tree))
(define (square-tree-recursion tree)
 	(cond ((null? tree) '() )
		  ((not (pair? tree)) (square tree))
		  (else (cons (square-tree-recursion (car tree)) (square-tree-recursion (cdr tree))))))

(define tree (list 1 (list 2 (list 3 4) 5) (list 6 7)))

(display (square-tree-map tree))
(newline)
(display (square-tree-recursion tree))
